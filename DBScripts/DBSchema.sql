-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.account
(
    id character varying(25) COLLATE pg_catalog."default" NOT NULL,
    name character varying(50) COLLATE pg_catalog."default",
    product_id character varying(6) COLLATE pg_catalog."default" NOT NULL,
    balance numeric(12, 4),
    active boolean,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    pid integer NOT NULL,
    CONSTRAINT pk_account PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dropdown
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 100 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default",
    groupid integer,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_dropdown PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dropdown_group
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 100 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default",
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_dropdown_group PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.loan
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 100000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    pid integer NOT NULL,
    product_id character varying(6) COLLATE pg_catalog."default" NOT NULL,
    loanamount numeric(12, 2) NOT NULL,
    term smallint NOT NULL,
    term_type_id smallint,
    calc_method_id integer,
    rate numeric(3, 2),
    status_id integer NOT NULL,
    inst_start_date date,
    last_inst_date date,
    dis_date date,
    dis_mode_id integer,
    active boolean NOT NULL DEFAULT true,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_loan PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.loan_log
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    loan_id integer NOT NULL,
    status_id integer NOT NULL,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_loan_log PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.main_menu
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 100 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default",
    pos smallint,
    active boolean NOT NULL DEFAULT true,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_main_menuid PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.menu
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 100 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    main_menuid integer,
    module_id integer,
    menu_order smallint,
    active boolean NOT NULL DEFAULT true,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_menuid PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.module
(
    id integer NOT NULL,
    name character varying(50) COLLATE pg_catalog."default",
    type character(1) COLLATE pg_catalog."default" NOT NULL,
    can_add boolean,
    can_edit boolean,
    can_view boolean,
    can_delete boolean,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    active boolean NOT NULL DEFAULT false,
    url character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT pk_module PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.person
(
    pid integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 10000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    type_id smallint,
    firstname character varying(50) COLLATE pg_catalog."default",
    middlename character varying(50) COLLATE pg_catalog."default",
    othername character varying(50) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    dob date,
    phone character varying(25) COLLATE pg_catalog."default",
    address character varying(100) COLLATE pg_catalog."default",
    idnumber character varying(20) COLLATE pg_catalog."default",
    nextofkin character varying(50) COLLATE pg_catalog."default",
    income numeric(12, 2),
    created_by integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modified_by integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_person PRIMARY KEY (pid)
);

CREATE TABLE IF NOT EXISTS public.product
(
    id character varying(6) COLLATE pg_catalog."default" NOT NULL,
    name character varying(50) COLLATE pg_catalog."default",
    type_id integer NOT NULL,
    series character varying(10) COLLATE pg_catalog."default" NOT NULL,
    term_type_id integer NOT NULL,
    rate numeric(3, 2),
    dterm smallint,
    damount numeric(12, 2),
    calc_method_id integer,
    active boolean NOT NULL DEFAULT false,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_product PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.role
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 100 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default",
    active boolean NOT NULL DEFAULT true,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_role PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.role_right
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    roleid integer,
    moduleid integer,
    can_add boolean,
    can_edit boolean,
    can_view boolean,
    can_delete boolean,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_role_right PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sys_setting
(
    id character varying(25) COLLATE pg_catalog."default" NOT NULL,
    description character varying(100) COLLATE pg_catalog."default",
    value character varying(100) COLLATE pg_catalog."default" NOT NULL,
    active boolean,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT sys_setting_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_role
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    userid integer,
    roleid integer,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_user_role PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 100 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(50) COLLATE pg_catalog."default",
    pid integer,
    createdby integer,
    createdon timestamp without time zone NOT NULL DEFAULT now(),
    modifiedby integer,
    modifiedon timestamp without time zone,
    CONSTRAINT pk_users PRIMARY KEY (id),
    CONSTRAINT uc_users_username UNIQUE (username)
);

ALTER TABLE IF EXISTS public.account
    ADD CONSTRAINT fk_account_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_account_createdby
    ON public.account(createdby);


ALTER TABLE IF EXISTS public.account
    ADD CONSTRAINT fk_account_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_account_modifiedby
    ON public.account(modifiedby);


ALTER TABLE IF EXISTS public.account
    ADD CONSTRAINT fk_account_pid FOREIGN KEY (pid)
    REFERENCES public.person (pid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.account
    ADD CONSTRAINT fk_account_product_id FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_account_product_id
    ON public.account(product_id);


ALTER TABLE IF EXISTS public.dropdown
    ADD CONSTRAINT fk_drop_down_groupid FOREIGN KEY (groupid)
    REFERENCES public.dropdown_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_drop_down_groupid
    ON public.dropdown(groupid);


ALTER TABLE IF EXISTS public.dropdown
    ADD CONSTRAINT fk_dropdown_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_dropdown_createdby
    ON public.dropdown(createdby);


ALTER TABLE IF EXISTS public.dropdown
    ADD CONSTRAINT fk_dropdown_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_dropdown_modifiedby
    ON public.dropdown(modifiedby);


ALTER TABLE IF EXISTS public.dropdown_group
    ADD CONSTRAINT fk_dropdown_group_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_dropdown_group_createdby
    ON public.dropdown_group(createdby);


ALTER TABLE IF EXISTS public.dropdown_group
    ADD CONSTRAINT fk_dropdown_group_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_dropdown_group_modifiedby
    ON public.dropdown_group(modifiedby);


ALTER TABLE IF EXISTS public.loan
    ADD CONSTRAINT fk_loan_calc_method_id FOREIGN KEY (calc_method_id)
    REFERENCES public.dropdown (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_calc_method_id
    ON public.loan(calc_method_id);


ALTER TABLE IF EXISTS public.loan
    ADD CONSTRAINT fk_loan_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_createdby
    ON public.loan(createdby);


ALTER TABLE IF EXISTS public.loan
    ADD CONSTRAINT fk_loan_dis_mode_id FOREIGN KEY (dis_mode_id)
    REFERENCES public.dropdown (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_dis_mode_id
    ON public.loan(dis_mode_id);


ALTER TABLE IF EXISTS public.loan
    ADD CONSTRAINT fk_loan_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_modifiedby
    ON public.loan(modifiedby);


ALTER TABLE IF EXISTS public.loan
    ADD CONSTRAINT fk_loan_pid FOREIGN KEY (pid)
    REFERENCES public.person (pid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_pid
    ON public.loan(pid);


ALTER TABLE IF EXISTS public.loan
    ADD CONSTRAINT fk_loan_product_id FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_product_id
    ON public.loan(product_id);


ALTER TABLE IF EXISTS public.loan
    ADD CONSTRAINT fk_loan_status_id FOREIGN KEY (status_id)
    REFERENCES public.dropdown (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_status_id
    ON public.loan(status_id);


ALTER TABLE IF EXISTS public.loan
    ADD CONSTRAINT fk_loan_term_type_id FOREIGN KEY (term_type_id)
    REFERENCES public.dropdown (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_term_type_id
    ON public.loan(term_type_id);


ALTER TABLE IF EXISTS public.loan_log
    ADD CONSTRAINT fk_loan_log_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_log_createdby
    ON public.loan_log(createdby);


ALTER TABLE IF EXISTS public.loan_log
    ADD CONSTRAINT fk_loan_log_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_log_modifiedby
    ON public.loan_log(modifiedby);


ALTER TABLE IF EXISTS public.loan_log
    ADD CONSTRAINT fk_loan_log_status_id FOREIGN KEY (status_id)
    REFERENCES public.dropdown (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_loan_log_status_id
    ON public.loan_log(status_id);


ALTER TABLE IF EXISTS public.loan_log
    ADD CONSTRAINT loan_log_loanid FOREIGN KEY (loan_id)
    REFERENCES public.loan (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.main_menu
    ADD CONSTRAINT fk_main_menu_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_fk_main_menu_createdby
    ON public.main_menu(createdby);


ALTER TABLE IF EXISTS public.main_menu
    ADD CONSTRAINT fk_main_menu_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_fk_main_menu_modifiedby
    ON public.main_menu(modifiedby);


ALTER TABLE IF EXISTS public.menu
    ADD CONSTRAINT fk_menu_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.menu
    ADD CONSTRAINT fk_menu_main_menuid FOREIGN KEY (main_menuid)
    REFERENCES public.main_menu (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.menu
    ADD CONSTRAINT fk_menu_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.menu
    ADD CONSTRAINT fk_menu_module_id FOREIGN KEY (module_id)
    REFERENCES public.module (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.person
    ADD CONSTRAINT fk_person_createdby FOREIGN KEY (created_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_person_createdby
    ON public.person(created_by);


ALTER TABLE IF EXISTS public.person
    ADD CONSTRAINT fk_person_modifiedby FOREIGN KEY (modified_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_person_modifiedby
    ON public.person(modified_by);


ALTER TABLE IF EXISTS public.person
    ADD CONSTRAINT fk_person_type_id FOREIGN KEY (type_id)
    REFERENCES public.dropdown (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_person_type_id
    ON public.person(type_id);


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT fk_product_calc_method_id FOREIGN KEY (calc_method_id)
    REFERENCES public.dropdown (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_product_calc_method_id
    ON public.product(calc_method_id);


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT fk_product_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_product_createdby
    ON public.product(createdby);


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT fk_product_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_product_modifiedby
    ON public.product(modifiedby);


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT fk_product_term_type_id FOREIGN KEY (term_type_id)
    REFERENCES public.dropdown (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_product_term_type_id
    ON public.product(term_type_id);


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT fk_product_type_id FOREIGN KEY (type_id)
    REFERENCES public.dropdown (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_product_type_id
    ON public.product(type_id);


ALTER TABLE IF EXISTS public.role
    ADD CONSTRAINT fk_role_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_role_createdby
    ON public.role(createdby);


ALTER TABLE IF EXISTS public.role
    ADD CONSTRAINT fk_role_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_role_modifiedby
    ON public.role(modifiedby);


ALTER TABLE IF EXISTS public.role_right
    ADD CONSTRAINT fk_role_right_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_role_right_createdby
    ON public.role_right(createdby);


ALTER TABLE IF EXISTS public.role_right
    ADD CONSTRAINT fk_role_right_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_role_right_modifiedby
    ON public.role_right(modifiedby);


ALTER TABLE IF EXISTS public.role_right
    ADD CONSTRAINT fk_role_right_moduleid FOREIGN KEY (moduleid)
    REFERENCES public.module (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_role_right_moduleid
    ON public.role_right(moduleid);


ALTER TABLE IF EXISTS public.role_right
    ADD CONSTRAINT fk_role_right_roleid FOREIGN KEY (roleid)
    REFERENCES public.role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_role_right_roleid
    ON public.role_right(roleid);


ALTER TABLE IF EXISTS public.user_role
    ADD CONSTRAINT fk_user_role_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_user_role_createdby
    ON public.user_role(createdby);


ALTER TABLE IF EXISTS public.user_role
    ADD CONSTRAINT fk_user_role_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_user_role_modifiedby
    ON public.user_role(modifiedby);


ALTER TABLE IF EXISTS public.user_role
    ADD CONSTRAINT fk_user_role_roleid FOREIGN KEY (roleid)
    REFERENCES public.role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_user_role_roleid
    ON public.user_role(roleid);


ALTER TABLE IF EXISTS public.user_role
    ADD CONSTRAINT fk_user_role_userid FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_user_role_userid
    ON public.user_role(userid);


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_users_createdby FOREIGN KEY (createdby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_users_createdby
    ON public.users(createdby);


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_users_modifiedby FOREIGN KEY (modifiedby)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_users_modifiedby
    ON public.users(modifiedby);


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_users_pid FOREIGN KEY (pid)
    REFERENCES public.person (pid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_users_pid
    ON public.users(pid);

END;